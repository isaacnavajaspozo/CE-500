# 🧠 Velociraptor es una herramienta de DFIR de respuesta a incidentes que ayuda a investigar incidencias en tiempo real.
# 🐧 Lo voy a dejar configurado y lo voy a utilizar exclusivamente cuando pase algo sospechoso o grave.
#===========================================================================================================================
[⛩️INSTALACIÓN ETHERNET]:
# Versiones                            : https://github.com/Velocidex/velociraptor/releases
# Documentación oficial                : https://github.com/Velocidex/velociraptor?tab=readme-ov-file
# Documentación oficial                : https://github.com/Velocidex/velociraptor
# Documentación oficial                : https://docs.velociraptor.app/

#=========================================================================================================================
[⛩️INSTALACIONES]::
# instalaciones 
apt update
apt upgrade -y

# creo una carpeta en el contenedor e instalo el script
mkdir /KIRIBAKO && cd /KIRIBAKO
apt install vim -y
vim script-00.sh
# i - (shift + botón derecho):
--------------------------------------------------------------------------------------
    # código de /SCRIPTS/script-00.sh de este github
--------------------------------------------------------------------------------------

# doy permisos y hago la instalación
chmod +x script-00.sh
./script-00.sh
source ~/.bashrc

#===========================================================================================================================
[⛩️INSTALACIÓN SERVIDOR-VELOCIRAPTOR EN LINUX]:
# Herramientas básicas
apt update && sudo apt install -y wget unzip openssl

# Descargar binario
# Comprobar la última versión antes de descargar : https://github.com/Velocidex/velociraptor/releases
apt install wget -y
wget https://github.com/Velocidex/velociraptor/releases/latest/download/velociraptor-v0.74.1-linux-amd64 -O velociraptor
chmod +x velociraptor
mv velociraptor /usr/local/bin/

# Inicializar configuración y genera el archivo server.config.yaml
velociraptor config generate -i
    > Self Signed SSL
    > Linux
    > /opt/velociraptor
    > logs
    > 1 Year
    > localhost
    > None - Configure DNS manually
    > y
  # Frontend (servidor principal)
  # Puerto del servidor (por defecto: 8000 frontend / 8889 GUI)
  # Habilita Web UI
  # Crea certificados (mTLS incluidos)
  # Guarda el archivo final como server.config.yaml
  # ⚠️ cuando me pregunte por el usuario y contraseña puedo crear tantos usuarios como quiera
  # cuando quiera dejar de agregar usuario dejo una sola vez los campos vacios, pulsando dos intros para pasar al siguiente apartado
    > usuario: root
    > contraseña: ****
# genera un archivo parecido a velociraptor_server_0.74.1_amd64.deb, que es el instalador del servidor para montar otro servidor
velociraptor --config server.config.yaml debian server
# Genera la configuración del cliente a partir de la configuración del servidor y la guarda en client.config.yaml
velociraptor --config server.config.yaml config client > client.config.yaml

# (Opcional) Ejecutarlo como servicio systemd
vim /etc/systemd/system/velociraptor.service
-------------------------------------------------------------------
[Unit]
Description=Velociraptor Server
After=network.target

[Service]
ExecStart=/usr/local/bin/velociraptor --config /KIRIBAKO/server.config.yaml frontend
Restart=always
User=root

[Install]
WantedBy=multi-user.target
-------------------------------------------------------------------

# modifico el archivo 
vim /KIRIBAKO/server.config.yaml
-------------------------------------------------------------------
# dentro de larchivo busco los 127.0.0.1 y los cambio por 0.0.0.0
# esto hace que se pueda escucha fuera de la máquina (dentro del mismo host)
-------------------------------------------------------------------

# activar
sudo systemctl daemon-reexec
sudo systemctl enable --now velociraptor

# comprobar si escucha el puerto
sudo ss -tuln | grep 8889 

# pruebo en navegador
https://<IP_SERVIDOR_LINUX>:8889

#===========================================================================================================================
[⛩️CONFIGURACIÓN DEL AGENTE]:
# 🔁 este proceso tengo que repetirlo por cada cliente (agente)

# velociraptor necesita crear un agente para conectar con el dispositivo cliente
# como anteriormente ya he creado la configuración del cliente compruebo que tengo el archivo 
find /KIRIBAKO/client.config.yaml
    # /KIRIBAKO/client.config.yaml

# genero el binario que me va a generar el archivo de instalación según la distribución de linux o el s.o
# en mi caso lo voy hacer para un servicor debian
# velociraptor --config client.config.yaml windows client
velociraptor --config client.config.yaml debian client

# migro el archivo desde la máquina principal 
exit
cp /var/lib/lxc/vm-velociraptor/rootfs/KIRIBAKO/velociraptor_client_0.74.1_amd64.deb /var/lib/lxc/vm-apache/rootfs/KIRIBAKO/

# entro en la máquina del agente (que en este caso es vm-apache) e instalo el paquete
cd /KIRIBAKO
sudo dpkg -i velociraptor_client_0.74.1_amd64.deb

# cambio la configuración
vim /etc/velociraptor/client.config.yaml
-------------------------------------------------------------------
...
server_urls:
  - https://<IP_DEL_SERVIDOR_VELOCIRAPTOR>:8889/
...
-------------------------------------------------------------------

# creo un servicio 
sudo vim /etc/systemd/system/velociraptor-client.service
-------------------------------------------------------------------
[Unit]
Description=Velociraptor Client
After=network.target

[Service]
ExecStart=/usr/local/bin/velociraptor_client client --config /etc/velociraptor/client.config.yaml
Restart=always
User=root

[Install]
WantedBy=multi-user.target
-------------------------------------------------------------------

# habilito servicios
systemctl start velociraptor-client
systemctl enable velociraptor-client
systemctl status velociraptor-client







#===========================================================================================================================
[⛩️CONFIGURACIÓN INTERFACE WEB]:
# 🦖 velociraptor es una herramienta de ciberseguridad que se usa principalmente para cuando pasa algo sospechoso o grave (como un ataque)
# permitir ver los mapeos de memoria de procesos en Linux
Hunt manager > New Hunt 
    > Tag: Linux-memoria
    > Orgs: <USUARIO_ADMIN>
    > Start Hunt Immediately
> Select Artifacts
    > Linux.Sys.Maps
> Configure parameters
    > processRegex: .*                                     # filtra todos los procesos por su ruta de ejecución
> Specify Resources
    > CPU Limit Percent: 25                                # suficiente para no saturar el sistema
    > IOps/Sec: 50                                         # o más si el host es potente
    > Max Execution Time in Seconds: 300                   # (5 minutos) es un valor razonable
    > Max Idle Time in Seconds: 60                         # 60 o 120 segundos
    > Max Rows: 10000                                      # puedes ajustar según tus necesidades
    > Max Logs: 10000
    > Max MB uploaded: 50                                  # 50 o 100 (depende de cuánto esperes obtener)
    > Trace Frequency Seconds: 10
    > Urgent: [x] Skip queues and run query urgently       # omitir colas y ejecutar consultas con urgencia



















#===========================================================================================================================
[⛩️INSTALACIÓN AGENTE-VELOCIRAPTOR EN WINDOWS]:
# 📦 Desde Linux genero el agente (generará un .exe)
velociraptor --config server.config.yaml config client

# Copia algo tipo velociraptor-v0.7.1-windows-amd64.exe en Windowns e instalalo

# Desde Windows instalalo como servicio 
velociraptor-v0.7.1-windows-amd64.exe service install
velociraptor-v0.7.1-windows-amd64.exe service start

# Luego ve a la siguiente url y debería ver mi host Windwos conectado
https://<IP_SERVIDOR_LINUX>:8889
