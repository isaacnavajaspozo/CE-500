#=========================================================================================================================
[üêãWHITE WHALE]::
# Guia de instalaci√≥n debian       : https://docs.docker.com/engine/install/debian/
# Gu√≠a de instalaci√≥n volumenes    : https://docs.docker.com/storage/volumes/

#=========================================================================================================================
[üêãRESUMEN PROYECTO ¬∑ M√ÅQUINAS LABORATOR√çO]:
# üßë‚Äçüéì Dentro de un servidor Debian, voy a crear con docker-compose un conjunto de m√°quinas que me sirvan como virtualizador de servidores 
# üßë‚Äçüéì Cada m√°quina dispondra de un solo vol√∫men, para persistir los datos. En dicho vol√∫men voy a guardar las carpetas de configuraci√≥n necsarias para el funcionamiento de la m√°quina
# üßë‚Äçüéì Cada vol√∫men, dentro de cada m√°quina, dispondr√° de dos modulos:    
      # script-00.sh: para la instalaci√≥n inicial del servidor
      # sistemas de carpetas: archivos importantes del servicio utilizado para dicha m√°quina
# üßë‚Äçüéì El servidor principal dispondr√° de un alias que ejecuta un script para inicializar las maquinas
# üßë‚Äçüéì Todas las im√°genes docker-compose estar√°n en modo bridge con los puertos necesarios abiertos a excepci√≥n de la m√°quina para pentesting que estar√° en modo host debido a que quiero utilizarla m√°s adelante y no quiero estas pendiente de modificar los puertos para cada prueba de pentesting.

#=========================================================================================================================
[üêãINSTALACI√ìN]:
# si tengo instalado docker desinstalo todos los paquetes en conflicto
for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done

# instalar repositorio de Docker
  # Agregue la clave GPG oficial de Docker
  sudo apt-get update
  sudo apt-get install ca-certificates curl
  sudo install -m 0755 -d /etc/apt/keyrings
  sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
  sudo chmod a+r /etc/apt/keyrings/docker.asc
  
  # Agregar el repositorio a las fuentes de Apt
  echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  sudo apt-get update

# instalar √∫ltima versi√≥n docker
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

# inicializao docker y lo activo al iniciar la sesi√≥n
sudo systemctl start docker
sudo systemctl enable docker

#=========================================================================================================================
[üêãüî•DOCKER COMPOSE]:
# instalo jq necesario para completar la instalaci√≥n de docker-compose
apt install jq 

# Me descargo docker-compose
sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

# Doy permisos de ejecuci√≥n
sudo chmod +x /usr/local/bin/docker-compose

# Compruebo que se a instalado
docker-compose --version

# creo una carpeta para los archivos docker-compose
mkdir docker-compose

# üßë‚Äçüéì Tengo que crear los archivos .yml (que se muestran en el siguiente apartado Düêã) para los archivo docker-compose

# Para lanzar el contendor en segundo plano y activar el contenedor lo hago con el siguiente comando
docker-compose -f docker-compose-samba.yml up -d

# Compruebo que el contenedor est√° lanzado
docker ps
# Compruebo todos los contenedores
docker ps -a

# acceder al contenedor 
docker exec -it vm1-samba bash

#=========================================================================================================================
[üêãüî•CREO ALIAS + SCRIPT]:
# creo un alias para asignaci√≥n r√°pida desde el servidor principal de la m√°quina docker
echo 'alias _vm1.samba=""docker start -i vm1-samba"' >> ~/.bashrc && source ~/.bashrc









#=========================================================================================================================
[üêãüî•VOLUMENES]:
# creo un volumen 
# Con docker-compose le mando crear un volumen por lo que una vez generada la m√°quina no es necesario crear su volumen, as√≠ que este apartado me lo salto

## üßë‚Äçüéì Vol√∫menes de Docker: Para que los cambios en tus contenedores sean persistentes, debes utilizar vol√∫menes de Docker. Los vol√∫menes permiten que los datos se mantengan incluso cuando el contenedor se detenga o se elimine.
# docker volume create docker-compose_vol-vm1-samba

  # inspecciono volumenes para ver las propiedades
  # docker volume inspect docker-compose_vol-vm1-samba

  # lista los volumenes 
  # docker volume ls

  # eliminar un volumen
  # docker volume rm docker-compose_vol-vm1-samba

  # eliminar docker-compose
  docker ps -a
  docker stop vm1-smb
  docker rm vm1-smb
  # si es necesario elimino el volumen y la imagen docker
  # rm /docker-compose/docker-compose-samba.yml



#=========================================================================================================================
[üêãüî•EJECUTAR SCRIPT INICIAL]:
# actualizo los paquetes del contenedor
apt-get update

# creo un archivo 
cd /docker-volume
touch script-00.sh

# doy permiso de ejecuci√≥n
chmod +x script-00.sh

# instalo nano y pego el c√≥digo
apt install nano
nano script-00.sh

[SCRIPT script-00.sh]:
--------------------------------------------------------------------------------------------------------------------------
   # Ejecuto el script que tengo en /SCRIPT/script-00.sh de este repositorio GitHub
--------------------------------------------------------------------------------------------------------------------------


#=========================================================================================================================
[üêãüî•COMPROBACI√ìN]:
root@b588c1588934:/# 
  # hacer una prueba de crear un archivo en la ra√≠z y despu√©s volver a entrar para comprobar que permanece
  touch prueba.txt && ls

  # para salir del contenedor
  exit
  
  # para volver a iniciar contenedor
  docker start -i vm1-samba
  
  # para enumerar los conedores activos 
  docker ps -a

  # comprobar que el archivo existe
  ls
      # prueba.txt

  +---------------------------------------------------------------------------------------------------------------------------------------------+
  |  [FUNCIONAMIENTO DE VOLUMENES]:                                                                                                             |
  |  * Como solo quiero crear un volumen, voy a crear un alias de las carpetas que quiero que se copien a la carpeta del volumen del contenedor |
  |  * De esta manera, cada vez que quiera sustituir los datos del volumen ejecuto el alias                                                     |
  |  * por ejemplo: en un mismo volumen puedo tener la carpeta de /etc/smb y /bin, guardando dentro del volumen: /smb /bin                      |
  |  Para hacer la copia de forma recursiva es: cp -r /etc/smb/ /Docker-volume/                                                                 |
  +---------------------------------------------------------------------------------------------------------------------------------------------+

# Ejecutar alias en m√°quina docker
echo "alias _force-data='cp -r /etc/smb/ /docker-volume/ && cp -r /bin/ /docker-volume/'" >> ~/.bashrc && source ~/.bashrc && echo "Done: Alias _Force-data added successfully!" || echo "Error: Failed to add alias."


#=========================================================================================================================
[üêãüî•CREO ALIAS EN SERVIDOR PRINCIPAL]:
# creo un alias para asignaci√≥n r√°pida desde el servidor principal de la m√°quina docker
echo 'alias _vm1.samba=""docker start -i vm1-samba"' >> ~/.bashrc && source ~/.bashrc

# por cada contenedor en Docker que necesite:
#    + Tengo que generar un vol√∫men Docker nuevo "vm1-samba" pero puedo utilizar la misma imagen debian
#    + Tengo un alias en cada contenedor que va a copiar todos los datos de configuraci√≥n que necesite volcar
#    + Tengo un alias en el servidor principal que va a ejecutar cada contenedor de forma inidividual r√°pidamente


#=========================================================================================================================
[üêãüî•UNA VEZ YA CREADO EL SERVIDOR]:
# inicializo el contenedor 
docker start vm1-samba

# en el ejemplo de un servidor samba pas olo siguiente para obtener la IP despu√©s de iniciar el contenedor
docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' vm1-samba
    # 172.17.0.2


#=========================================================================================================================
[üêãüî•REPETICI√ìN]:
# Tengo que crear por cada m√°quina virtual que quiero hacer en docker:
    # Un volumen:                                             Voy a guardar dentro todas las carpetas de configuraci√≥n de la m√°quina.
    # Un archivo de configuraci√≥n docker-compose:             Voy a crear un archivo .yml para configurar la m√°quina docker.
    # Un script dentro del alias de la m√°quina:               Este script va a ser de instalaci√≥n general, (igual para todas las m√°quinas).
    # Un script dentro del alias de la m√°quina:               Opci√≥n 1 : cuando se ejecute va a copiar autom√°ticamente todas las carpetas de configuraci√≥n del servidor. Opci√≥n 2: Va a desplegar automaticamentelas carpetas de configuraci√≥n del vol√∫men a su ubicaci√≥n real del servidor.
    # Un alias en la m√°quina:                                 (Opcional). Un alias de acceso r√°pido que ejecute el script del vol√∫men.
    # Un alias em el servidor principal:                      Para ejecutar de forma r√°pida el servidor de la m√°quina.


